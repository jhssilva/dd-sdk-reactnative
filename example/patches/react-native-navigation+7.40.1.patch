diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactTypefaceUtils.java b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactTypefaceUtils.java
index 834d734..0246ecc 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactTypefaceUtils.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactTypefaceUtils.java
@@ -96,14 +96,14 @@ public class ReactTypefaceUtils {
 
     int want = 0;
     if ((weight == Typeface.BOLD)
-        || ((oldStyle & Typeface.BOLD) != 0 && weight == ReactTextShadowNode.UNSET)) {
-      want |= Typeface.BOLD;
-    }
+        || ((oldStyle & Typeface.BOLD) != 0)) {
+       want |= Typeface.BOLD;
+     }
 
     if ((style == Typeface.ITALIC)
-        || ((oldStyle & Typeface.ITALIC) != 0 && style == ReactTextShadowNode.UNSET)) {
-      want |= Typeface.ITALIC;
-    }
+        || ((oldStyle & Typeface.ITALIC) != 0)) {
+       want |= Typeface.ITALIC;
+     }
 
     if (family != null) {
       typeface = ReactFontManager.getInstance().getTypeface(family, want, weight, assetManager);
diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactViewGroup.kt b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactViewGroup.kt
index f92580c..9809d88 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactViewGroup.kt
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/utils/ReactViewGroup.kt
@@ -4,4 +4,4 @@ import com.facebook.react.views.view.ReactViewBackgroundDrawable
 import com.facebook.react.views.view.ReactViewGroup
 
 val ReactViewGroup.borderRadius: Float
-    get() = (background as? ReactViewBackgroundDrawable)?.fullBorderRadius ?: 0f
\ No newline at end of file
+    get() = 0f
diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/viewcontroller/LayoutDirectionApplier.kt b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/viewcontroller/LayoutDirectionApplier.kt
index 89216ae..20f3ffa 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/viewcontroller/LayoutDirectionApplier.kt
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/viewcontrollers/viewcontroller/LayoutDirectionApplier.kt
@@ -3,13 +3,15 @@ package com.reactnativenavigation.viewcontrollers.viewcontroller
 import com.facebook.react.ReactInstanceManager
 import com.facebook.react.modules.i18nmanager.I18nUtil
 import com.reactnativenavigation.options.Options
+import com.facebook.react.bridge.ReactContext
 
 class LayoutDirectionApplier {
     fun apply(root: ViewController<*>, options: Options, instanceManager: ReactInstanceManager) {
-        if (options.layout.direction.hasValue() && instanceManager.currentReactContext != null) {
+        val reactContext = instanceManager.currentReactContext as? ReactContext
+        if (options.layout.direction.hasValue() && reactContext != null) {
             root.activity.window.decorView.layoutDirection = options.layout.direction.get()
-            I18nUtil.getInstance().allowRTL(instanceManager.currentReactContext, options.layout.direction.isRtl)
-            I18nUtil.getInstance().forceRTL(instanceManager.currentReactContext, options.layout.direction.isRtl)
+            I18nUtil.getInstance().allowRTL(reactContext, options.layout.direction.isRtl)
+            I18nUtil.getInstance().forceRTL(reactContext, options.layout.direction.isRtl)
         }
     }
 }
diff --git a/node_modules/react-native-navigation/lib/android/app/src/reactNative71/java/com/reactnativenavigation/react/modal/ModalContentLayout.kt b/node_modules/react-native-navigation/lib/android/app/src/reactNative71/java/com/reactnativenavigation/react/modal/ModalContentLayout.kt
index ea8516f..ca02c01 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/reactNative71/java/com/reactnativenavigation/react/modal/ModalContentLayout.kt
+++ b/node_modules/react-native-navigation/lib/android/app/src/reactNative71/java/com/reactnativenavigation/react/modal/ModalContentLayout.kt
@@ -8,8 +8,7 @@ import com.facebook.react.uimanager.*
 import com.facebook.react.uimanager.events.EventDispatcher
 import com.facebook.react.views.view.ReactViewGroup
 
-
-class ModalContentLayout(context: Context?) : ReactViewGroup(context), RootView{
+class ModalContentLayout(context: Context?) : ReactViewGroup(context), RootView {
     private var hasAdjustedSize = false
     private var viewWidth = 0
     private var viewHeight = 0
@@ -21,6 +20,7 @@ class ModalContentLayout(context: Context?) : ReactViewGroup(context), RootView{
         viewHeight = h
         this.updateFirstChildView()
     }
+
     private fun updateFirstChildView() {
         if (this.childCount > 0) {
             hasAdjustedSize = false
@@ -29,12 +29,12 @@ class ModalContentLayout(context: Context?) : ReactViewGroup(context), RootView{
             reactContext.runOnNativeModulesQueueThread(object : GuardedRunnable(reactContext) {
                 override fun runGuarded() {
                     val uiManager = this@ModalContentLayout.getReactContext().getNativeModule(
-                            UIManagerModule::class.java
+                        UIManagerModule::class.java
                     ) as UIManagerModule
                     uiManager.updateNodeSize(
-                            viewTag,
-                            this@ModalContentLayout.viewWidth,
-                            this@ModalContentLayout.viewHeight
+                        viewTag,
+                        this@ModalContentLayout.viewWidth,
+                        this@ModalContentLayout.viewHeight
                     )
                 }
             })
@@ -49,22 +49,32 @@ class ModalContentLayout(context: Context?) : ReactViewGroup(context), RootView{
             updateFirstChildView()
         }
     }
+
     override fun onChildStartedNativeGesture(child: View, androidEvent: MotionEvent?) {
-        mJSTouchDispatcher.onChildStartedNativeGesture(androidEvent, this.getEventDispatcher())
+        androidEvent?.let {
+            mJSTouchDispatcher.onChildStartedNativeGesture(it, this.getEventDispatcher()!!)
+        }
     }
+
     override fun onChildStartedNativeGesture(androidEvent: MotionEvent?) {
-        mJSTouchDispatcher.onChildStartedNativeGesture(androidEvent, this.getEventDispatcher())
+        androidEvent?.let {
+            mJSTouchDispatcher.onChildStartedNativeGesture(it, this.getEventDispatcher()!!)
+        }
     }
+
     override fun onChildEndedNativeGesture(child: View, androidEvent: MotionEvent?) {
-        mJSTouchDispatcher.onChildEndedNativeGesture(androidEvent, this.getEventDispatcher())
+        androidEvent?.let {
+            mJSTouchDispatcher.onChildEndedNativeGesture(it, this.getEventDispatcher()!!)
+        }
     }
+
     override fun requestDisallowInterceptTouchEvent(disallowIntercept: Boolean) {}
+
     private fun getEventDispatcher(): EventDispatcher? {
         val reactContext: ReactContext = this.getReactContext()
-        return reactContext.getNativeModule(UIManagerModule::class.java)!!.eventDispatcher
+        return reactContext.getNativeModule(UIManagerModule::class.java)?.eventDispatcher
     }
 
-
     override fun handleException(t: Throwable?) {
         getReactContext().handleException(RuntimeException(t))
     }
@@ -74,14 +84,17 @@ class ModalContentLayout(context: Context?) : ReactViewGroup(context), RootView{
     }
 
     override fun onInterceptTouchEvent(event: MotionEvent?): Boolean {
-        mJSTouchDispatcher.handleTouchEvent(event, getEventDispatcher())
+        event?.let {
+            mJSTouchDispatcher.handleTouchEvent(it, getEventDispatcher()!!)
+        }
         return super.onInterceptTouchEvent(event)
     }
 
     override fun onTouchEvent(event: MotionEvent?): Boolean {
-        mJSTouchDispatcher.handleTouchEvent(event, getEventDispatcher())
+        event?.let {
+            mJSTouchDispatcher.handleTouchEvent(it, getEventDispatcher()!!)
+        }
         super.onTouchEvent(event)
         return true
     }
-
 }
